###################################################################
############################# Register ############################
###################################################################

Register:
    %0 = void
    %-1 = this
    %-2 = this proxy

    %-3 = fun args
    %-4 = fun args
    ...n
    %-n = fun args

TJS2 VM寄存器在助记符中用%（数字）表示。数字也可以是负数。寄存器的数量没有限制。
所有局部变量和计算过程中的临时值都记录在寄存器中
寄存器表示的值与TJS2中所谓的变量相同，可以表示整数、实数、对象、字符串、八位字节序列和void。
当您引用该对象的成员时，它首先查看 this ，如果不存在，则查看global this proxy在全局级别运行单元中不存在。
除这些之外的寄存器的值，其用途是预先确定的，或者是在执行之前预先填充的值，在执行开始时是未定义的。


####################################################################
############################### opcodes ############################
####################################################################

操作数可能具有 %obj.*name 或 %obj.%name 的形式，这些是涉及对象成员引用的。

带有 %obj.*name 形式的操作数进行直接引用，它以寄存器 %obj 表示的对象中引用名为 *name 的成员。
带有 %obj.%name 形式的操作数进行间接引用，它以寄存器 %obj 表示的对象中引用名为 %name 的成员。
具有这种类型的指令的助记符包含 d 或 pd（直接/属性直接）和 i 或 pi（间接/属性间接）的后缀。

带有 p 后缀的会触发目标寄存器的属性处理器（类似于单目 * 运算符的操作）。

####################################################################

无操作 nop
    不会做任何事。

复制常量值 const
    格式：const %dest, *src

    将*src 表示的常量区的值复制到%dest 表示的寄存器中。

函数调用 call、 call、 calli
    格式：call %dest, %func(%arg1, %arg2, %arg3, ...)
    格式：calld %dest, %obj.*name(%arg1, %arg2, %arg3, ...)
    格式：calli %dest, %obj.%name(%arg1, %arg2, %arg3, ...)

    使用参数 %arg1、%arg2、%arg3 ... 调用 %func 或 %obj.*name 或 %obj.%name 表示的函数对象，并将结果存储在 %dest 中。如果 %dest 为 %0，则结果将被丢弃（不存储在 %0 中）。


直接获取属性 gpd, gpds
    格式：gpd %dest, %obj.*name
    格式：gpds %dest, %obj.*name

    从%obj 表示的对象中引用*name 表示的成员，并将其值复制到%dest。
    gpd 涉及调用属性处理程序，但 gpds 不调用属性处理程序，它检索属性对象本身。

间接获取属性 gpi , gpis
    格式：gpi %dest, %obj.%name
    格式：gpis %dest, %obj.%name

    从%obj 表示的对象中引用%name 表示的成员，并将其值复制到%dest。
    gpi 涉及调用属性处理程序，而 gpis 不调用属性处理程序，它检索属性对象本身。

直接设置属性 spd, spde, spdeh, spds
    格式：spd %obj.*name, %src
    格式：spde %obj.*name, %src
    格式：spdeh %obj.*name, %src
    格式：spds %obj.*name, %src

    将%src 的值赋给%obj 表示的对象的*name 表示的成员。
    spd 执行正常访问，但如果成员不存在则引发异常。
    如果 spde 不存在，则创建一个新成员。
    spdeh 将成员设置为隐藏。在当前版本中没有任何意义。
    spds 不调用属性处理程序，它替换属性对象本身。

间接设置属性 spi, spie, spis
    格式：spi %obj.%name, %src
    格式：spie %obj.%name, %src
    格式：spis %obj.%name, %src

    将%src 的值分配给%obj 表示的对象的%name 表示的成员。
    spi 执行正常访问，但如果成员不存在则引发异常。
    spie 创建一个新成员（如果它不存在）。
    spis 不调用属性处理程序，它替换属性对象本身。

设置结果值 srv
    格式：srv %reg

    %reg的值是函数的返回值（函数的返回值就是%reg表示的值）。

返回 ret
    格式：ret

    返回给调用者。